def print_board(board):
    a = "  "
    spacer = ""
    if len(board) >= 9:
      a += " "
    for x in range(len(board[0])):
      a += str(x + 1)
      a += " "
    print a
    skip_lines(1)
    for b in range(len(board)):
      if b >= 9 or len(board) < 9:
        spacer = ""
      else:
        spacer = " "
      print "| "+ spacer + " ".join(board[b]) + " |"
    
    # bottom border
    c = "|-"
    for d in range(len(board[0])):
      c += "--"
    c += "|"
    print c
    


def check(board):
    for row in board: # check for horizonal connect 4
      o_counter = 0
      x_counter = 0
      for a in row:
        if a == "O":
          o_counter += 1
          x_counter = 0
        elif a == "X":
          x_counter += 1
          o_counter = 0
        else:
          o_counter = 0
          x_counter = 0
        if o_counter == 4 or x_counter == 4:
          return True
    for column in range(len(board[0])): # check for vertical connect 4
      o_counter = 0
      x_counter = 0
      for a in range(len(board)):
        if board[a][column] == "O":
          o_counter += 1
          x_counter = 0
        elif board[a][column] == "X":
          x_counter += 1
          o_counter = 0
        else:
          o_counter = 0
          x_counter = 0
        if o_counter == 4 or x_counter == 4:
          return True
    #needs to include diagonal check
      
def skip_lines(a):
    for x in range(a):
        print " "
        

# create board
num_board_rows = 6
num_board_columns = 7
board = []
for a in range(num_board_rows):
  row = []
  for b in range(num_board_columns):
    row.append("-")
  board.append(row)

num_board_spaces = 0
for x in range(len(board)):
  num_board_spaces += len(board[x])
  
print_board(board)
skip_lines(3)

for x in range(1,5):
  board[2][x] = "O"

print_board(board)  
print check(board)
